# @format

version: '3.8'

services:
  # Spring Boot Application
  posbackend:
    image: docker.oneshell.in/library/posbackend:latest
    container_name: posbackend
    restart: always
    ports:
      - '8090:8090'
    depends_on:
      - mongodb
      - nats-server
    environment:
      - NATS_URL=nats://nats-server:4222
      - NATS_REMOTE_URL=nats://nats.oneshell.in:4222
      - SPRING_PROFILES_ACTIVE=default
      - MONGODB_URI=mongodb://mongodb:27017/pos
    volumes:
      - ~/data/logs:/var/log/posbackend # Host directory mapped to container log directory
    deploy:
      resources:
        limits:
          cpus: '2.0' # Limit to 2 CPU cores
          memory: 2536M # Limit to 2.5GB RAM
        reservations:
          cpus: '1' # Reserve 1 CPU core
          memory: 500M # Reserve 512MB RAM
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8090/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Node.js Backend Application
  posNodeBackend:
    image: docker.oneshell.in/library/posnodebackend:latest
    container_name: posNodeBackend
    restart: always
    ports:
      - '3001:3001'
    depends_on:
      - mongodb
    environment:
      - NODE_ENV=production
    volumes:
      - ~/data/logs:/var/log/posNodeBackend # Host directory mapped to container log directory
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - ~/data:/data/db
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    ports:
      - '27017:27017'
    deploy:
      resources:
        limits:
          cpus: '1.0' # Limit to 1 CPU core
          memory: 1536M # Limit to 1.5GB RAM
        reservations:
          cpus: '0.3' # Reserve 0.5 CPU cores
          memory: 300M # Reserve 512MB RAM
    networks:
      - app-network

  # NATS Server
  nats-server:
    image: docker.oneshell.in/library/nats:latest
    container_name: nats-server
    restart: always
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    ports:
      - '4222:4222'
      - '8222:8222'
      - '8080:8080'
    volumes:
      - ./nats-server.conf:/nats-server.conf
    command: ['--config', '/nats-server.conf']
    environment:
      - JS_STORAGE_TYPE=file
      - JS_STORAGE_DIR=/data/jetstream
    deploy:
      resources:
        limits:
          cpus: '0.75' # Limit to 0.75 CPU cores
          memory: 1024M # Limit to 1GB RAM
        reservations:
          cpus: '0.2' # Reserve 0.5 CPU cores
          memory: 64M # Reserve 512MB RAM
    networks:
      - app-network

  # Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    environment:
      - TZ=Europe/London
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config.json:/config.json # Mount Docker auth file
    command: --interval 20
    deploy:
      resources:
        limits:
          cpus: '0.2' # Limit to 0.5 CPU cores
          memory: 128M # Limit to 128MB RAM
        reservations:
          cpus: '0.1' # Reserve 0.25 CPU cores
          memory: 64M # Reserve 64MB RAM
    networks:
      - app-network

  compose-updater:
    image: compose-updater:latest
    container_name: compose-updater
    restart: always
    ports:
      - '5001:5000'
    environment:
      - GITHUB_REPO=https://github.com/Manikanta-Reddy-Pasala/pos-deployment.git
      - COMPOSE_FILE_PATH=docker-compose.yaml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/data/logs:/app/logs
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
